@page "/Estado"
@page "/Estado/{idEstadoEditar:int}"

@using PROYECTOFINALPW.Shared;
@using PROYECTOFINALPW.Client.Services;

@inject IEstadoSerivce estadoService;
@inject NavigationManager navegacion;


@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@attribute [Authorize]

<h3>EstadoCaso</h3>

<EditForm Model="estado" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="mb-3">
        <label class="form-label">Estado </label>
        <InputText class="form-control" @bind-Value="estado.Estado"></InputText>
        <ValidationMessage For="@(() => estado.Estado)"></ValidationMessage>
    </div>

    <button class="btn btn-primary" type="submit">
        @btnTexto
    </button>
    <a class="btn btn-warning" href="Configuracion">Volver</a>
</EditForm>

@code {
    [Parameter]
    public int idEstadoEditar { get; set; } = 0;

    string titulo = string.Empty;
    string btnTexto = string.Empty;

    EstadoCasoDTO estado = new EstadoCasoDTO();


    protected override async Task OnInitializedAsync()
    {
        if (idEstadoEditar != 0)
        {
            estado = await estadoService.Buscar(idEstadoEditar);
            btnTexto = "Actualizar estado";
            titulo = "Editar estado";
        }
        else
        {
            btnTexto = "Guardar estado";
            titulo = "Nuevo estado";
        }

    }

    private async Task OnValidSubmit()
    {
        int idDevuelto = 0;
        if (idEstadoEditar == 0)
            idDevuelto = await estadoService.Agregar(estado);
        else
            idDevuelto = await estadoService.Editar(estado);

        if (idDevuelto != 0)
            navegacion.NavigateTo("/Configuracion");

    }
}


